import{_ as s,c as i,o as a,a2 as e}from"./chunks/framework.CQ12TVIp.js";const c=JSON.parse('{"title":"Revue de code de Nicolas Dubé","description":"","frontmatter":{},"headers":[],"relativePath":"nicolas-dube.md","filePath":"nicolas-dube.md"}'),n={name:"nicolas-dube.md"},t=e(`<h1 id="revue-de-code-de-nicolas-dube" tabindex="-1">Revue de code de Nicolas Dubé <a class="header-anchor" href="#revue-de-code-de-nicolas-dube" aria-label="Permalink to &quot;Revue de code de Nicolas Dubé&quot;">​</a></h1><h2 id="le-code" tabindex="-1">Le Code <a class="header-anchor" href="#le-code" aria-label="Permalink to &quot;Le Code&quot;">​</a></h2><p><strong>Le camelCase n&#39;est pas respecté</strong></p><p>popover au lien de popOver</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> popover </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Popover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;errorPopover&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;An error occurred while playing audio file.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    trigger: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;manual&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">popover.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p><strong>Bouton stop</strong></p><p>On ne peut pas faire stop quand la musique est en pause</p><h2 id="autres" tabindex="-1">Autres <a class="header-anchor" href="#autres" aria-label="Permalink to &quot;Autres&quot;">​</a></h2><p><strong>Esthéthique</strong></p><p><a href="https://getbootstrap.com/docs/4.1/components/buttons/" target="_blank" rel="noreferrer">Les boutons pourraient être plus stylisé</a></p><p><strong>Aucun emit utilisé</strong></p><p>Le code utilise des stores, qui est une vielle fonctionnalité</p><p><strong>Valeurs non utilisés</strong></p><p>La valeur oldValue n&#39;est pas utilisé</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">watch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(audio, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">oldValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    formattedDuration.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> formatAudioDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newValue.duration)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    newValue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">commit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nextSong&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><strong>SetInterval</strong></p><p>SetInterval n&#39;est pas le plus performant. Il est préférable d&#39;utiliser <a href="https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges" target="_blank" rel="noreferrer">TimeRange</a></p>`,17),l=[t];function p(h,r,k,o,d,E){return a(),i("div",null,l)}const u=s(n,[["render",p]]);export{c as __pageData,u as default};
